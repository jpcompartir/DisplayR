[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 DisplayR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/plotting_theme_functions.html","id":"plotting-functions","dir":"Articles","previous_headings":"","what":"Plotting Functions","title":"Plotting & Theme Functions","text":"working research projects Understand phases, often set charts create beginning, multiple points throughout project. charts help perform common exploratory data analysis (EDA) tasks better understand data identify areas investigation. charts sit naturally packages : {ParseR} - descriptive plots text distributions e.g. Pairwise Correlations, n-gram plots, Weighted log-odds {SegmentR} - plots topic modelling outputs e.g. top terms {ConnectR} - network visualisations e.g. Retweet network, mention network plots clear obvious location, e.g. sentiment distributions, volume time etc. sit {DisplayR}. likely centrepiece delivery, used substitute thinking problem hand creating bespoke graphics called *. however represent valuable efficiency gains EDA workflow, prime clients Capture Intelligence deck delivery. *See Capture Cookbook Visualisation Guidelines information creating Bespoke graphics adhering good data visualisation principles.","code":""},{"path":"/articles/plotting_theme_functions.html","id":"volume-over-time","dir":"Articles","previous_headings":"Plotting Functions","what":"Volume Over Time","title":"Plotting & Theme Functions","text":"working data various Social Media APIs (Twitter, Facebook, Reddit etc.) usually time stamp date/time column, column can used visualise conversation takes place identify important changes volume occur. ’ll use {DisplayR}’s dataset:","code":"df <- DisplayR::disp_example"},{"path":"/articles/plotting_theme_functions.html","id":"single-element---ungrouped-data-frame","dir":"Articles","previous_headings":"Plotting Functions > Volume Over Time","what":"Single Element - Ungrouped Data Frame","title":"Plotting & Theme Functions","text":"feed dataset disp_plot_vot function, setting date = date, plot_type line bar time_unit whatever unit wish use (see function documentation (?dr_plot_vot) available units).  Alternatively, generate bar plot count volume per week change plot colour:  ’ll notice plot’s title, y-axis label x-axis text (x axis label currently) change auto-magically.","code":"df %>%   dr_plot_vot(date_var = date,                  plot_type = \"line\",                  time_unit = \"day\") df %>%   dr_plot_vot(date_var = date,                plot_type = \"bar\",                time_unit = \"week\",               \"#d80a83\",               smooth = TRUE) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"/articles/plotting_theme_functions.html","id":"multiple-elements---grouped-data-frame","dir":"Articles","previous_headings":"Plotting Functions > Volume Over Time","what":"Multiple Elements - Grouped Data Frame","title":"Plotting & Theme Functions","text":"Often want - need - visualise trend volume multiple things time, things similar objects contained variable. example, may want visualise volume time per topic, per sentiment category. can plot volume topic time, though can (nearly always) inadvisable map 9 colours plot:  three sentiment categories, map sentiment simply, use scale_colour_manual function re-colour lines:","code":"df %>%   filter(!is.na(sentiment)) %>%   dr_plot_vot_group(group_var = topic,                     date_var = date,                     time_unit = \"week\") sentiment_colours <- c(\"positive\" = \"#107C10\", \"negative\" = \"#D83B01\", \"neutral\" = \"#FFB900\")  df %>%   filter(!is.na(sentiment)) %>%   dr_plot_vot_group(group_var = sentiment,                     date_var = date,                     time_unit = \"day\") +   ggplot2::scale_colour_manual(values = sentiment_colours) +   ggplot2::labs(title = stringr::str_wrap(\"Neutral and negative sentiment consistently higher than positive barring brief periods in March.\", width = 80)) # Use stringr::str_wrap to wrap the title according to a specified with (# of characters) #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"/articles/plotting_theme_functions.html","id":"sentiment-distributions","dir":"Articles","previous_headings":"Plotting Functions","what":"Sentiment Distributions","title":"Plotting & Theme Functions","text":"looked briefly plot sentiment time using dr_plot_vot_group function, can also use sentiment-specific functions visualise sentiment. : dr_plot_sent - vertical bar chart showing distribution sentiment dr_plot_sent_group - stacked horizontal bar chart group sentiment dr_plot_sent_vot - stacked bar chart specifically sentiment categories","code":""},{"path":"/articles/plotting_theme_functions.html","id":"ungrouped","dir":"Articles","previous_headings":"Plotting Functions > Sentiment Distributions","what":"Ungrouped","title":"Plotting & Theme Functions","text":"want plot quick sentiment distribution chart using bars can use dr_plot_sent function, limited scope customisation, can manually add things like title. bar_label can set “percent”, “volume” “none”.","code":"df %>%   dr_plot_sent(sentiment_var = sentiment,                bar_labels = \"percent\") +   labs(title = \"Negative sentiment ~14% higher than positive\")"},{"path":"/articles/plotting_theme_functions.html","id":"grouped","dir":"Articles","previous_headings":"Plotting Functions > Sentiment Distributions","what":"Grouped","title":"Plotting & Theme Functions","text":"often , won’t want create just one sentiment chart, ’ve created function plotting grouped sentiment charts. dr_plot_sent_group function comes additional argument, group_var =. setting plot_type = \"percent\" bar_labels = \"volume\", can add y-axis (visually, x-axis output chart) ticks back give title make plot explicit,  options, can set bar’s labels percent, titles change axis labels, move legend etc.  can also plot volumes rather percentages bars :","code":"df %>%   dr_plot_sent_group(group_var = topic, plot_type = \"percent\", bar_labels = \"volume\") +   scale_y_continuous() + # Add the percentage back to the axis ticks   labs(y = \"Percentage of posts\")  #Add the label back #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. df %>%   dr_plot_sent_group(group_var = topic, plot_type = \"percent\", bar_labels = \"percent\") +   labs(x = \"Percentage of posts\", #We use x = because the plot has had its axes reversed        title = \"Risks & Challenges drive negative sentiment\",        subtitle = \"Plot ordered by overall volume\", #Just an example        caption = \"Data Source: Social Media\")+#Just an example   theme(legend.position = \"right\") df %>%   dr_plot_sent_group(group_var = topic, sentiment_var = sentiment, plot_type = \"volume\", bar_labels = \"none\") +   theme(panel.grid.major.x = element_line()) +   scale_y_continuous() #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale."},{"path":"/articles/plotting_theme_functions.html","id":"sentiment-over-time","dir":"Articles","previous_headings":"Plotting Functions > Sentiment Distributions","what":"Sentiment over time","title":"Plotting & Theme Functions","text":"showed example using dr_plot_vot_group function visualise sentiment time, also dr_plot_sent_vot function, made specifically sentiment can provide bars lines. ’ve already seen lines sentiment, ’ll show bars. function allows user enter sentiment mapping directly, let’s switch accessibility-friendly colour palette.","code":"df %>%   dr_plot_sent_vot(sentiment_var = sentiment,                    date_var = date,                    plot_type = \"bar\",                    time_unit = \"day\",                    sentiment_colours = c(\"positive\" = \"#007fff\",                                          \"negative\" = \"#D83B01\",                                          \"neutral\" =  \"#a89797\"))"},{"path":"/articles/plotting_theme_functions.html","id":"raincloud-plot","dir":"Articles","previous_headings":"Plotting Functions > Sentiment Distributions","what":"Raincloud plot","title":"Plotting & Theme Functions","text":"Visualising distribution variable important step obtaining information data. many visualisation techniques effectively relay information, histograms, boxplots, density plots. However, comes pitfalls, example boxplots hide data number data points ‘behind’ boxplot unknown. neat approach known raincloud plot, combines multiple visualisations intuitive, modular, statistically robust format. Effectively combines density plot, raw jittered data points, boxplot offer maximum utility whilst ensuring underlying data hidden summary statistics. plot can achieved dr_plot_raincloud()","code":"set.seed(123) df %>%   slice_sample(n = 500) %>%   drop_na(sentiment) %>%   dr_plot_raincloud(grouping_variable = sentiment,                     continuous_variable = V1,                     smoothness = 1)"},{"path":"/articles/plotting_theme_functions.html","id":"theme-functions","dir":"Articles","previous_headings":"","what":"Theme Functions","title":"Plotting & Theme Functions","text":"number theme functions included {DisplayR}, applied according nature project tend take care colour palettes fonts. think theme, number themes missing, submit issue : (https://github.com/jpcompartir/DisplayR/issues). general idea add theme need rendering plot. Let’s get plot style using themes.  add dark theme dr_theme_black  add Microsoft theme using dr_theme_microsoft:  SHARE theme using dr_theme_share:  SAMY theme using dr_theme_samy:","code":"(   plot <- df %>%   dr_plot_vot_group(group_var = topic, time_unit = \"day\")  ) plot +   dr_theme_black() plot +   dr_theme_microsoft(scale_type = \"discrete\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale. plot +   dr_theme_share(scale_type = \"discrete\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale. plot +   dr_theme_samy(scale_type = \"discrete\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"/articles/plotting_theme_functions.html","id":"brand-theming","dir":"Articles","previous_headings":"","what":"Brand Theming","title":"Plotting & Theme Functions","text":"DisplayR 0.1 added space brand .yml templates DisplayR/inst/brands. brand _brand.yml optional ‘logo.png’. can added Quarto projects render accordance brand styling. first brand added shareds internal experiments presentations. can view available brands : add _brand.yml logo shareds :","code":"dr_list_brands() #> [1] \"shareds\" dr_add_brand(\"shareds\")"},{"path":"/articles/powerpoint.html","id":"creating-volume-over-time-plots","dir":"Articles","previous_headings":"","what":"Creating Volume Over Time Plots","title":"Charts for PowerPoint","text":"Let’s get data. ’ll use disp_ms_vot function, creates line chart data frame. Type ?disp_ms_vot access documentation. function counts date variable us, buckets date variable day, week, month, quarter, year, according input time argument. can preview plot temporary PowerPoint printing setting preview = TRUE","code":"df <- DisplayR::disp_example vot_plot <- df %>%   disp_ms_vot(date = date, time = \"week\") vot_plot %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"creating-grouped-volume-over-time-plots","dir":"Articles","previous_headings":"","what":"Creating Grouped Volume Over Time Plots","title":"Charts for PowerPoint","text":"Usually creating Volume Time charts want create chart shows volume multiple groups, example may want create sentiment time chart show positive, negative neutral, volume time topic topic modelling output. use disp_ms_vot_grouped Now line topic, charting weekly volume. However, colours default colours may want output PowerPoint.","code":"grouped_vot_plot <- df %>%   disp_ms_vot_grouped(date = date, group_var = topic, time = \"week\")  grouped_vot_plot %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---colours","dir":"Articles","previous_headings":"Creating Grouped Volume Over Time Plots","what":"Restyling The Plot - Colours","title":"Charts for PowerPoint","text":"pass custom colours need named list/vector colours. ’ll use Viridis palette demonstrative purposes: Now line colour viridis scale. used named vector/list different, custom palette - principle remains , take named list values colours feed chart_data_stroke function. can make sure values correct extracting data frame, topics topics <- sort(unique(df$topic))","code":"colours <- viridis::viridis_pal()(9) topics <- sort(unique(df$topic)) names(colours) <- topics print(colours)  grouped_vot_plot <- grouped_vot_plot %>%   chart_data_stroke(values = colours) # use chart_data_stroke for line charts, chart_data_fill for bar charts.  grouped_vot_plot %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---titles","dir":"Articles","previous_headings":"Creating Grouped Volume Over Time Plots","what":"Restyling The Plot - Titles","title":"Charts for PowerPoint","text":"Another likely customisation ’ll want make programmatically add titles charts. can use mschart’s chart_labels function:","code":"grouped_vot_plot <- grouped_vot_plot %>%   chart_labels(title = \"Volume over time plot coloured in Viridis scale\", xlab = \"Date\", ylab = \"Weekly volume\")"},{"path":"/articles/powerpoint.html","id":"visualising-sentiment-distributions","dir":"Articles","previous_headings":"","what":"Visualising Sentiment Distributions","title":"Charts for PowerPoint","text":"often need visualise sentiment distributions - either entire datasets groups, groups within groups… Generally prefer stacked bar charts pie charts variants. human visual system better comparing lengths heights areas. ’re also neater, concise.","code":""},{"path":"/articles/powerpoint.html","id":"creating-stacked-sentiment-barcharts","dir":"Articles","previous_headings":"Visualising Sentiment Distributions","what":"Creating Stacked Sentiment Barcharts %","title":"Charts for PowerPoint","text":"create stacked sentiment barcharts can use disp_ms_sent_grouped function. function expects enter variable contains sentiment categories - remove NAs sentiment, make sentiment categories lower case. also need input topic variable, can decide whether output ‘percent’ ‘volume’ plot_type argument. Tip: Using ‘percent’ ensure stacked bar length, may misleading volume low.","code":"library(ggplot2) grouped_sent_chart <- df %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"percent\") %>%   # chart_data_labels(show_val = TRUE)  %>%   chart_theme(     grid_major_line_x = fp_border(style = \"none\"),     grid_major_line_y = fp_border(style = \"none\"),     axis_ticks_y = fp_border(style = \"none\")   )  grouped_sent_chart %>% print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---ordering-removing-grid-lines","dir":"Articles","previous_headings":"Visualising Sentiment Distributions > Creating Stacked Sentiment Barcharts %","what":"Restyling The Plot - Ordering + Removing Grid Lines","title":"Charts for PowerPoint","text":"ordering plot currently alphabetical, may best way - indeed often best way. reasonable ordering may overall volume. topic_n variable, can reorder topic topic_n, using mutate reorder: Notice removed many grid lines, included defaults within charting functions presently.","code":"grouped_sent_chart <- df %>%   mutate(topic = reorder(topic, topic_n)) %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"percent\") %>%   # chart_data_labels(show_val = TRUE)  %>%   chart_theme(     grid_major_line_x = fp_border(style = \"none\"),     grid_major_line_y = fp_border(style = \"none\"),     axis_ticks_y = fp_border(style = \"none\")   ) grouped_sent_chart %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"creating-stacked-sentiment-barcharts---volume","dir":"Articles","previous_headings":"Visualising Sentiment Distributions","what":"Creating Stacked Sentiment Barcharts - Volume","title":"Charts for PowerPoint","text":"Sometimes may need create raw volume rather proportion/%-based charts, can use plot_type = “volume” argument achieve .","code":"grouped_sent_chart <- df %>%   mutate(topic = reorder(topic, topic_n)) %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"volume\")"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---removing-data-labels","dir":"Articles","previous_headings":"Visualising Sentiment Distributions > Creating Stacked Sentiment Barcharts - Volume","what":"Restyling The Plot - Removing Data Labels","title":"Charts for PowerPoint","text":"However, notice data labels now feasible - categories bars small fit labels. case can remove :","code":"grouped_sent_chart %>%   chart_data_labels(show_val = FALSE) %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"exporting-to-powerpoint---existing-presentation","dir":"Articles","previous_headings":"","what":"Exporting to PowerPoint - Existing Presentation","title":"Charts for PowerPoint","text":"’ve made plots now need export efficiently PowerPoint, {officer} package shines. options exporting : Read current PowerPoint presentation insert chart new slide. Create new PowerPoint presentation, insert new slide, copy chart existing presentation. 1. nearly always preferable 2. plot cuts overall steps go R –> PowerPoint, dealing 10s, 100s plots, difference meaningful. However, need know path PowerPoint presentation, can non-trivial users familiar navigating file systems directories, especially working interactive/live document, meaning may need opt 2.","code":""},{"path":"/articles/powerpoint.html","id":"one-plot-at-a-time","dir":"Articles","previous_headings":"Exporting to PowerPoint - Existing Presentation","what":"One plot at a time","title":"Charts for PowerPoint","text":"First need initialise PowerPoint presentation. demo presentation stored specific file path, ’ll use one now. can store filepath variable re-use variable. Tip: Mac users, use Finder identify root presentation - right click PowerPoint’s tray icon -> options -> open Finder begin, can use pptx_summary function output dataframe showing current contents PowerPoint layout_summary function output dataframe containing available slide templates PowerPoint. Tip: Reading PowerPoint presentation custom ‘Master Slides’ give slide templates work . utility function ships DisplayR disp_add_slide takes presentation chart main inputs, well layout type master. add slide ‘Two Content’ layout, can use disp_add_slide function. common layout wherein chart sits right copy left. can choose layout output layout_summary function. print presentation presentation path save changes.","code":"presentation_path <- \"~/Documents/presentations/officer_demo.pptx\"  presentation <- read_pptx(presentation_path) pptx_summary(presentation) layout_summary(presentation) presentation <- disp_add_slide(presentation, grouped_sent_chart, layout = \"Two Content\")  print(presentation, target = presentation_path)"},{"path":"/articles/powerpoint.html","id":"multiple-plots","dir":"Articles","previous_headings":"Exporting to PowerPoint - Existing Presentation","what":"Multiple plots","title":"Charts for PowerPoint","text":"Let’s say list plots, ’ll go volume time now. generate list plots, one topic using following code: added additional logic add title plot can keep track inside PowerPoint. Now can go file’s destination open , see new slides. Warning: good understanding iteration using {purrr} package important veering away script.","code":"topic_names <- unique(sort(df$topic)) plot_list <- df %>%   group_split(topic) %>%   map(~ .x %>%     disp_ms_vot(date = date, time = \"week\") %>%     chart_theme(legend_position = \"n\")) %>%   setNames(topic_names) %>% # set the name of the list just in case   map2(.x = ., .y = topic_names, ~ .x %>%     chart_labels(title = paste0(\"Volume over time - \", .y))) # add a title to each plot  presentation <- purrr::reduce(plot_list, disp_add_slide, layout = \"Two Content\", .init = presentation)  print(presentation, presentation_path)"},{"path":"/articles/powerpoint.html","id":"exporting-to-powerpoint---new-presentation","dir":"Articles","previous_headings":"","what":"Exporting to PowerPoint - New Presentation","title":"Charts for PowerPoint","text":"cases ’re working live presentations big presentations, may need render slides new presentation copy . data copy chart. , leave ‘path =’ argument blank read_pptx function can now open presentation copy charts across.","code":"presentation <- read_pptx()  grouped_sent_chart <- df %>%   mutate(topic = reorder(topic, topic_n)) %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"percent\")   presentation <- disp_add_slide(presentation, grouped_sent_chart, layout = \"Two Content\")  print(presentation, target = \"~/Documents/tmp_ppt_pres.pptx\")"},{"path":"/articles/powerpoint.html","id":"creating-a-gradient-filled-volume-sentiment-chart","dir":"Articles","previous_headings":"Exporting to PowerPoint - New Presentation","what":"Creating a gradient-filled volume + sentiment chart","title":"Charts for PowerPoint","text":"Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - - can preview look powerpoint : Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - - can export similarly exported charts. Tip: PowerPoint can remove gradient fill total row Positive + Negative columns via ‘format shape’ ’s now, see {officer} {mschart} packages tips styling exporting plots.","code":"(my_ft <- df %>%   disp_flextable(topic, sentiment)) print(my_ft, preview = \"pptx\")"},{"path":"/articles/tables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating Beautiful Tables","text":"Tables essential often -appreciated method visualising data. Many data visualisation professionals eschew usage considered visually engaging. However, often ideal tool job. Many us well ask ‘need charts table?’ consider using table : need display precise values need display multiple raw volumes percentages place want users compare individual elements data multiple dimensions plotting becomes convoluted ’re slide-limited e.g. need provide executive summary complex data Apart using tables display communicate findings, ’s important aware tables can aid hypothesis generation, showing dig next data mining process.","code":""},{"path":"/articles/tables.html","id":"tabular-data","dir":"Articles","previous_headings":"","what":"Tabular Data","title":"Creating Beautiful Tables","text":"’ll use example data frame ships {DisplayR} {tidyverse} create summary tables, ’ll use {gt} {DisplayR} functions create aesthetically-pleasing tables. Let’s say need visualise volume - raw numbers %, well sentiment counts categorical variable - case ’ll use topic. can create summary table like : use various means visualise table, let’s try data table, fairly common. ’ll style bootstrap allow filtering top table. Whilst functional, table lacking visual appeal; ’s better used exploring data internally communicating findings including deck. Despite making clear topic highest volume, require considerable mental work figure topic highest proportion positive negative sentiment. ’re also lacking vital elements titles, subtitles, captions; well additional flourishes icons can bring table life. Let’s see visualise output gt.","code":"df <- DisplayR::disp_example (summary_table <- df %>%   filter(!is.na(sentiment)) %>%   count(topic, sentiment, name = \"sent_n\") %>%   add_count(topic, wt = sent_n, name = \"volume\") %>%   pivot_wider(names_from = sentiment, values_from = sent_n) %>%   mutate(percent = round(volume / sum(volume) * 100, 2), .after = volume) %>%   arrange(desc(volume)) ) #> # A tibble: 9 × 6 #>   topic                 volume percent negative neutral positive #>   <chr>                  <int>   <dbl>    <int>   <int>    <int> #> 1 Conversational AI       1559   31.2       412     784      363 #> 2 AI Ethics & Society      798   16.0       341     332      125 #> 3 AI-Powered Creativity    637   12.7       210     292      135 #> 4 Risks & Challenges       631   12.6       394     178       59 #> 5 AI Search                380    7.6       123     182       75 #> 6 Coding & Assistance      364    7.28      115     167       82 #> 7 AI Performance           280    5.6        58     122      100 #> 8 AI & Business            268    5.36       57     110      101 #> 9 AI & Security             82    1.64       24      45       13 DT::datatable(summary_table, style = \"bootstrap\", filter = \"top\")"},{"path":"/articles/tables.html","id":"gt","dir":"Articles","previous_headings":"Tabular Data","what":"GT","title":"Creating Beautiful Tables","text":"table preferable multiple reason: gradient fill positive & negative columns make comparison easy. Volume x Time charts nice addition, allow us compare trends multiple topics glance, whilst also keeping volume + sentiment information eye movement away. overall styling just pleasant Data Table. *note, Sentiment x Time chart hidden view, ’re still experimenting charts work/ don’t work default outputs. One drawbacks gt easily output PowerPoint, step forward flextable","code":"library(gt) (my_gt <- df %>%   disp_gt(     date_var = date,     group_var = topic,     sentiment_var = sentiment,     sentiment_max_colours =       list(         \"negative\" = \"#D83B01\",         \"neutral\" = \"#FFB900\",         \"positive\" = \"#107C10\"       ),     time_unit = \"day\",     table_title = \"Topic Modelling Summary Table\", source_note = \"Data Source: xxx\"   ) %>%   gt::cols_hide(\"Sentiment x Time\") ) #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_col()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/articles/tables.html","id":"flextable-exporting-to-powerpoint","dir":"Articles","previous_headings":"Tabular Data","what":"Flextable & Exporting to PowerPoint","title":"Creating Beautiful Tables","text":"function include Volume x Time chart, get nice gradient fill Positive + Negative columns can export PowerPoint. Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - - can preview look powerpoint : Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - -","code":"(my_ft <- df %>%   disp_flextable(topic, sentiment)) print(my_ft, preview = \"pptx\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jack Penzer. Author, maintainer. Jamie Hudson. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Penzer J, Hudson J (2025). DisplayR: Functions visualising data. R package version 0.1, https://jpcompartir.github.io/DisplayR/.","code":"@Manual{,   title = {DisplayR: Functions for visualising data},   author = {Jack Penzer and Jamie Hudson},   year = {2025},   note = {R package version 0.1},   url = {https://jpcompartir.github.io/DisplayR/}, }"},{"path":"/index.html","id":"displayr","dir":"","previous_headings":"","what":"Functions for visualising data","title":"Functions for visualising data","text":"DisplayR Capture Intelligence’s package data visualisation, offering wide array functions tailored meet various data visualisation needs. package caters diverse set visualisation requirements, including static interactive data visualisation, tables, seamless PowerPoint integration R. DisplayR streamlines process creating customising charts plots, enabling users efficiently produce visuals effectively convey insights patterns hidden within data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for visualising data","text":"can install development version DisplayR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jpcompartir/DisplayR\")"},{"path":"/reference/disp_add_slide.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"function creates new slide specified layout inserts specified chart PowerPoint presentation using officer package.","code":""},{"path":"/reference/disp_add_slide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"","code":"disp_add_slide(   presentation,   chart,   layout = \"Title and Content\",   master = \"Office Theme\" )"},{"path":"/reference/disp_add_slide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"presentation officer::pptx object representing PowerPoint presentation. chart mschart::ms_chart object representing chart inserted. layout character string specifying slide layout used (default: \"Title Content\"). master character string specifying master slide used (default: \"Office Theme\").","code":""},{"path":"/reference/disp_add_slide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"modified officer::pptx object new slide chart added.","code":""},{"path":"/reference/disp_example.html","id":null,"dir":"Reference","previous_headings":"","what":"DisplayR example — disp_example","title":"DisplayR example — disp_example","text":"Data frame useful variables demonstration purposes/","code":""},{"path":"/reference/disp_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DisplayR example — disp_example","text":"","code":"disp_example"},{"path":"/reference/disp_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DisplayR example — disp_example","text":"data frame 5,000 observations 15 variables. document document id date placeholder text_copy placeholder text placeholder topic placeholder permalink placeholder cluster placeholder sentiment placeholder V1 placeholder V2 placeholder new_clusters placeholder universal_message_id placeholder fifty_clusters placeholder topic_n placeholder sender_screen_name placeholder","code":""},{"path":"/reference/disp_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a flextable for volume + sentiment with a gradient fill. — disp_flextable","title":"Create a flextable for volume + sentiment with a gradient fill. — disp_flextable","text":"function takes data frame, grouping variable, sentiment variable create summary table display flextable. table contains count percentage positive, negative, neutral sentiments per group. positive negative columns filled gradient color.","code":""},{"path":"/reference/disp_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a flextable for volume + sentiment with a gradient fill. — disp_flextable","text":"","code":"disp_flextable(   data,   group_var,   sentiment_var,   positive_colour = \"#107C10\",   negative_colour = \"#D83B01\" )"},{"path":"/reference/disp_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a flextable for volume + sentiment with a gradient fill. — disp_flextable","text":"data data frame containing group variable sentiment variable. group_var name column data frame used grouping. sentiment_var name column data frame containing sentiment values. positive_colour (Optional) colour positive gradient. Default \"#107C10\". negative_colour (Optional) colour negative gradient. Default \"#D83B01\".","code":""},{"path":"/reference/disp_flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a flextable for volume + sentiment with a gradient fill. — disp_flextable","text":"flextable object displaying summary table gradient colouring positive negative sentiments.","code":""},{"path":"/reference/disp_flextable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a flextable for volume + sentiment with a gradient fill. — disp_flextable","text":"output function can exported directly PowerPoint. unique values within sentiment variable c(\"positive\", \"negative\", \"neutral\"), function try remove NAs, lower case sentiment variable, values 'pos', 'neg', 'neu', need replace values function expects.","code":""},{"path":"/reference/disp_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt_summary table fit for use in client briefs — disp_gt","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"Function calls various helper functions, @seealso make_gt_summary_table. function prepares summary given dataset grouped variable interest summarised based sentiment time categories. summary presented 'gt' table format. Additional summary columns may created user-specified icons. table may customised specified title source note.","code":""},{"path":"/reference/disp_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"","code":"disp_gt(   data,   sentiment_var,   group_var,   date_var,   time_unit = c(\"month\", \"day\", \"week\", \"year\", \"quarter\"),   sentiment_max_colours = list(negative = \"#C00000\", positive = \"#107C10\"),   icons = NULL,   table_title = \"Test\",   source_note = \"source_note =\" )"},{"path":"/reference/disp_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"data data frame. sentiment_var variable data frame representing sentiment. group_var variable data frame used grouping. date_var variable data frame representing date. time_unit Time unit grouping. Default choices \"month\", \"day\", \"week\", \"year\", \"quarter\". Default \"month\". sentiment_max_colours List colours positive negative sentiments. icons Optional vector icons added summary table. table_title Title table. Default \"Test\". source_note Note added bottom table indicating source.","code":""},{"path":"/reference/disp_gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"gt object representing summary table.","code":""},{"path":"/reference/disp_gt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"","code":"if (FALSE) { # \\dontrun{ disp_gt_summary(   my_data, \"sentiment\", \"group\", \"date\", \"month\",   list(\"negative\" = \"#C00000\", \"positive\" = \"#107C10\"),   NULL, \"My Summary\", \"source_note\" ) } # }"},{"path":"/reference/disp_gt_sent_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Sentiment Over Time — disp_gt_sent_time","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"function generates chart showing sentiment distribution time based data frame, styled gt.","code":""},{"path":"/reference/disp_gt_sent_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"","code":"disp_gt_sent_time(   data,   sentiment_var = sentiment,   date_var = date,   chart_type = c(\"lines\", \"bars\"),   time_unit = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   date_breaks = \"4 months\",   date_labels = \"%b\" )"},{"path":"/reference/disp_gt_sent_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"data input data frame. sentiment_var name variable data frame containing sentiment values. date_var name variable data frame containing dates. chart_type type chart plotted. Default \"lines\". time_unit time unit group data . Default \"week\". date_breaks breaks used x-axis date scale. Default \"4 months\". date_labels format labels x-axis date scale. Default \"%b\".","code":""},{"path":"/reference/disp_gt_sent_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"ggplot object representing plotted chart.","code":""},{"path":"/reference/disp_gt_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","title":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","text":"quickly add re-usable theme elements gt plot funcs","code":""},{"path":"/reference/disp_gt_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","text":"","code":"disp_gt_theme()"},{"path":"/reference/disp_gt_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","text":"list ggplot boiler plate theme options","code":""},{"path":"/reference/disp_gt_vot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create volume over time charts for use in gt tables — disp_gt_vot","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"plot function output appears cells gt table. custom styling applied remove much detail, output ","code":""},{"path":"/reference/disp_gt_vot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"","code":"disp_gt_vot(   data,   date_var,   time_unit = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   bar_colour = \"#628EFD\",   date_breaks = \"4 months\",   date_labels = \"%b\" )"},{"path":"/reference/disp_gt_vot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"data input data frame. date_var name variable data frame containing dates. time_unit time unit group data . Default \"week\". bar_colour color bars plot. Default \"#628EFD\". date_breaks breaks used x-axis date scale. Default \"4 months\". date_labels format labels x-axis date scale. Default \"%b\".","code":""},{"path":"/reference/disp_gt_vot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"ggplot object representing bar plot.","code":""},{"path":"/reference/disp_ms_sent_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"function takes data frame, sentiment variable, group variable, creates stacked bar chart representing distribution sentiment. within group, bars displayed horizontally percentage sentiment shown.","code":""},{"path":"/reference/disp_ms_sent_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"","code":"disp_ms_sent_grouped(   data,   sentiment_var,   group_var,   plot_type = c(\"percent\", \"volume\") )"},{"path":"/reference/disp_ms_sent_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"data data frame containing sentiment group variables. sentiment_var name sentiment variable data frame (string unquoted symbol). group_var name group variable data frame (string unquoted symbol). plot_type raw volumes percentages plotted.","code":""},{"path":"/reference/disp_ms_sent_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"mschart::ms_barchart object representing stacked bar chart.","code":""},{"path":"/reference/disp_ms_vot.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Time Series Chart of Data Volume — disp_ms_vot","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"function generates time series chart data volume specified time period. chart created using mschart package based provided data, date column, time period, date format. data unsummarised, counting hood, .e. data long form date column already counted.","code":""},{"path":"/reference/disp_ms_vot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"","code":"disp_ms_vot(   data,   date,   time = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   date_format = \"d/m/yy\" )"},{"path":"/reference/disp_ms_vot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"data data frame containing data plotted. date name date column data frame. time character vector specifying time unit used aggregation (default \"week\"). Supported values \"day\", \"week\", \"month\", \"quarter\", \"year\". date_format character string specifying format displaying dates x-axis (default \"d/m/yy\").","code":""},{"path":"/reference/disp_ms_vot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"mschart object representing time series chart data volume specified time period.","code":""},{"path":"/reference/disp_ms_vot_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"function generates time series chart grouped data volume specified time period. chart created using mschart package based provided data, date column, time period, date format. data unsummarised, counting hood, .e. data long form date group column already counted.","code":""},{"path":"/reference/disp_ms_vot_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"","code":"disp_ms_vot_grouped(   data,   date,   group_var,   time = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   date_format = \"yyyy/dd/mm\" )"},{"path":"/reference/disp_ms_vot_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"data data frame containing data plotted. date name date column data frame. group_var name variable wish group , e.g. sentiment topic. time character vector specifying time unit used aggregation (default \"week\"). Supported values \"day\", \"week\", \"month\", \"quarter\", \"year\". date_format character string specifying format displaying dates x-axis (default \"d/m/yy\").","code":""},{"path":"/reference/disp_ms_vot_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"mschart object representing time series chart data volume specified time period.","code":""},{"path":"/reference/dr_add_brand.html","id":null,"dir":"Reference","previous_headings":"","what":"Add brand styling to your project — dr_add_brand","title":"Add brand styling to your project — dr_add_brand","text":"Add _brand.yml logo.png project DisplayR's inst/brands folder. need new brand added, contact Data Science Team","code":""},{"path":"/reference/dr_add_brand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add brand styling to your project — dr_add_brand","text":"","code":"dr_add_brand(brand, directory = getwd())"},{"path":"/reference/dr_add_brand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add brand styling to your project — dr_add_brand","text":"brand Name brand wish load, appears dr_list_brands() directory directory want brand information added , default uses current working directory","code":""},{"path":"/reference/dr_add_brand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add brand styling to your project — dr_add_brand","text":"Invisible","code":""},{"path":"/reference/dr_add_brand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add brand styling to your project — dr_add_brand","text":"","code":"brands <- dr_list_brands() dr_add_brand(\"shareds\")"},{"path":"/reference/dr_list_brands.html","id":null,"dir":"Reference","previous_headings":"","what":"View which brands have styling options available for them — dr_list_brands","title":"View which brands have styling options available for them — dr_list_brands","text":"Check brands _brand.yml optional 'logo.png' uploaded DisplayR .","code":""},{"path":"/reference/dr_list_brands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View which brands have styling options available for them — dr_list_brands","text":"","code":"dr_list_brands()"},{"path":"/reference/dr_list_brands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View which brands have styling options available for them — dr_list_brands","text":"list folder names relating brands/","code":""},{"path":"/reference/dr_list_brands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View which brands have styling options available for them — dr_list_brands","text":"","code":"brands <- dr_list_brands()"},{"path":"/reference/dr_mmlb_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a stacked bar chart for Microsoft's Making My Life Better classification — dr_mmlb_barchart","title":"Create a stacked bar chart for Microsoft's Making My Life Better classification — dr_mmlb_barchart","text":"Generates stacked bar chart using 'mschart' custom colors 'yes' '' groups.","code":""},{"path":"/reference/dr_mmlb_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a stacked bar chart for Microsoft's Making My Life Better classification — dr_mmlb_barchart","text":"","code":"dr_mmlb_barchart(data, colours, state_var)"},{"path":"/reference/dr_mmlb_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a stacked bar chart for Microsoft's Making My Life Better classification — dr_mmlb_barchart","text":"data dataframe containing states corresponding 'yes' '' counts. colours named vector colors apply 'yes' groups chart. state_var column state plotted (x axis) #'","code":""},{"path":"/reference/dr_mmlb_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a stacked bar chart for Microsoft's Making My Life Better classification — dr_mmlb_barchart","text":"object class 'ms_barchart' representing stacked bar chart.","code":""},{"path":"/reference/dr_mmlb_barchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a stacked bar chart for Microsoft's Making My Life Better classification — dr_mmlb_barchart","text":"","code":"df <- dplyr::tribble(   ~state, ~yes, ~no,   \"Brings me joy\", 4861, 167,   \"Empowers me\", 4715, 313,   \"Feels connected\", 922, 4106,   \"Inspires new ideas\", 4906, 122,   \"Simplifies tech\", 3954, 1074 )  colours <- c(\"#0078D4\", \"#107C10\", \"#FFB900\", \"#008575\", \"#D83B01\") chart <- dr_mmlb_barchart(df, colours, state_var = state) print(chart, preview = TRUE) #> * 'ms_barchart' object #>  #> * original data [10,4] (sample): #>             state class    n               group #> 1   Brings me joy   yes 4861   Brings me joy_yes #> 2   Brings me joy    no  167    Brings me joy_no #> 3     Empowers me   yes 4715     Empowers me_yes #> 4     Empowers me    no  313      Empowers me_no #> 5 Feels connected   yes  922 Feels connected_yes #>  #> * series data [5,11] (sample): #>                state Brings me joy_yes Brings me joy_no Empowers me_yes #> 1      Brings me joy              4861              167              NA #> 2        Empowers me                NA               NA            4715 #> 3    Feels connected                NA               NA              NA #> 4 Inspires new ideas                NA               NA              NA #> 5    Simplifies tech                NA               NA              NA #>   Empowers me_no Feels connected_yes Feels connected_no Inspires new ideas_yes #> 1             NA                  NA                 NA                     NA #> 2            313                  NA                 NA                     NA #> 3             NA                 922               4106                     NA #> 4             NA                  NA                 NA                   4906 #> 5             NA                  NA                 NA                     NA #>   Inspires new ideas_no Simplifies tech_yes Simplifies tech_no #> 1                    NA                  NA                 NA #> 2                    NA                  NA                 NA #> 3                    NA                  NA                 NA #> 4                   122                  NA                 NA #> 5                    NA                3954               1074"},{"path":"/reference/dr_plot_raincloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly create a raincloud plot — dr_plot_raincloud","title":"Quickly create a raincloud plot — dr_plot_raincloud","text":"Create raincloud plot provide maximal statistical information preserving desired ‘inference glance’ nature barplots similar visualisation devices.","code":""},{"path":"/reference/dr_plot_raincloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly create a raincloud plot — dr_plot_raincloud","text":"","code":"dr_plot_raincloud(   data,   grouping_variable,   continuous_variable,   smoothness = 0.3 )"},{"path":"/reference/dr_plot_raincloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly create a raincloud plot — dr_plot_raincloud","text":"data data frame includes grouping continuous variable. grouping_variable variable want map colours . continuous_variable continious variable want displaying distribution . smoothness measure, must > 0, representing smoothness density plot (.e. closely want density match distribution). Default 0.3, high values can oversmooth data, low values can cause undersmoothing. Generally recommended stick values 0.3-1.","code":""},{"path":"/reference/dr_plot_raincloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly create a raincloud plot — dr_plot_raincloud","text":"ggplot2 object","code":""},{"path":"/reference/dr_plot_raincloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly create a raincloud plot — dr_plot_raincloud","text":"","code":"## Smoothness default value of 0.3 iris %>%   dr_plot_raincloud(grouping_variable = Species,                     continuous_variable = Sepal.Length,                     smoothness = 0.3)   ## Smoothness changed to 0.8 iris %>%   dr_plot_raincloud(grouping_variable = Species,                     continuous_variable = Sepal.Length,                     smoothness = 0.8)"},{"path":"/reference/dr_plot_sent.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sentiment distribution bar chart — dr_plot_sent","title":"Create a sentiment distribution bar chart — dr_plot_sent","text":"prefer bars pie charts donuts, end.","code":""},{"path":"/reference/dr_plot_sent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sentiment distribution bar chart — dr_plot_sent","text":"","code":"dr_plot_sent(   data,   sentiment_var = sentiment,   bar_labels = c(\"percent\", \"volume\", \"none\"),   sentiment_colours = c(positive = \"#107C10\", negative = \"#D83B01\", neutral = \"#FFB900\") )"},{"path":"/reference/dr_plot_sent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sentiment distribution bar chart — dr_plot_sent","text":"data Data Frame Tibble object sentiment_var Variable containing 'positive', 'negative', 'neutral' sentiment classification bar_labels Data labels bars, percent volume sentiment_colours Colour mapping sentiment categories","code":""},{"path":"/reference/dr_plot_sent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sentiment distribution bar chart — dr_plot_sent","text":"ggplot object sentiment distribution","code":""},{"path":"/reference/dr_plot_sent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sentiment distribution bar chart — dr_plot_sent","text":"","code":"{ DisplayR::disp_example %>% dr_plot_sent(sentiment_var = sentiment, bar_labels = \"percent\") }"},{"path":"/reference/dr_plot_sent_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sentiment grouped by a certain variable. — dr_plot_sent_group","title":"Plot sentiment grouped by a certain variable. — dr_plot_sent_group","text":"Plot sentiment grouped certain variable.","code":""},{"path":"/reference/dr_plot_sent_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sentiment grouped by a certain variable. — dr_plot_sent_group","text":"","code":"dr_plot_sent_group(   data,   group_var = topic,   sentiment_var = sentiment,   plot_type = c(\"percent\", \"volume\"),   bar_labels = c(\"volume\", \"none\", \"percent\"),   sentiment_colours = c(positive = \"#107C10\", negative = \"#D83B01\", neutral = \"#FFB900\") )"},{"path":"/reference/dr_plot_sent_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sentiment grouped by a certain variable. — dr_plot_sent_group","text":"data data frame includes grouping sentiment variables. group_var variable group . Default \"topic\". sentiment_var sentiment variable. Default \"sentiment\". plot_type type plot. Default \"percent\". bar_labels type labels display bars. Default \"volume\". sentiment_colours Colour mapping sentiment categories","code":""},{"path":"/reference/dr_plot_sent_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sentiment grouped by a certain variable. — dr_plot_sent_group","text":"ggplot2 object.","code":""},{"path":"/reference/dr_plot_sent_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot sentiment grouped by a certain variable. — dr_plot_sent_group","text":"","code":"{ DisplayR::disp_example %>% dr_plot_sent_group(group_var = topic, sentiment_var = sentiment, plot_type = \"percent\", bar_labels = \"volume\")  DisplayR::disp_example %>% dr_plot_sent_group(group_var = topic,  sentiment_var = sentiment,  plot_type = \"volume\",  bar_labels = \"none\") }"},{"path":"/reference/dr_plot_sent_vot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a bar or line chart of sentiment over time — dr_plot_sent_vot","title":"Plot a bar or line chart of sentiment over time — dr_plot_sent_vot","text":"Plot bar line chart sentiment time","code":""},{"path":"/reference/dr_plot_sent_vot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a bar or line chart of sentiment over time — dr_plot_sent_vot","text":"","code":"dr_plot_sent_vot(   data,   sentiment_var = sentiment,   date_var = date,   sentiment_colours = c(positive = \"#107C10\", negative = \"#D83B01\", neutral = \"#FFB900\"),   plot_type = c(\"bar\", \"line\"),   time_unit = c(\"week\", \"day\", \"month\", \"quarter\", \"year\") )"},{"path":"/reference/dr_plot_sent_vot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a bar or line chart of sentiment over time — dr_plot_sent_vot","text":"data data frame includes grouping sentiment variables. sentiment_var sentiment variable. Default \"sentiment\". date_var variable date . Default \"date\". sentiment_colours Colour mapping sentiment categories plot_type type plot. Default \"percent\". time_unit single unit time fed lubridate::floor_date  \"week\", \"day\", \"month\",\"quarter\", \"year\"","code":""},{"path":"/reference/dr_plot_sent_vot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a bar or line chart of sentiment over time — dr_plot_sent_vot","text":"ggplot object","code":""},{"path":"/reference/dr_plot_sent_vot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a bar or line chart of sentiment over time — dr_plot_sent_vot","text":"","code":"{ DisplayR::disp_example %>% dr_plot_sent_vot(plot_type = \"bar\", time_unit = \"day\") DisplayR::disp_example %>% dr_plot_sent_vot(plot_type = \"line\", time_unit = \"day\") } #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/reference/dr_plot_vot.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly create a bar chart which shows volume over time. — dr_plot_vot","title":"Quickly create a bar chart which shows volume over time. — dr_plot_vot","text":"can use time_unit argument display counts different time frames, e.g. time = \"day\" give chart bar represents volume counts day. give bars new colours, enter string bar_colour =  , string hexcode e.g. \"#440154FF\" name colour e.g. \"midnightblue\"","code":""},{"path":"/reference/dr_plot_vot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly create a bar chart which shows volume over time. — dr_plot_vot","text":"","code":"dr_plot_vot(   data,   date_var = date,   plot_type = c(\"line\", \"bar\"),   colour = \"#440154FF\",   time_unit = c(\"day\", \"week\", \"month\", \"quarter\", \"year\"),   smooth = FALSE )"},{"path":"/reference/dr_plot_vot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly create a bar chart which shows volume over time. — dr_plot_vot","text":"data Data Frame Tibble object date_var Date column plot_type plot shown line bar chart? colour Colour line/bars - string, name hexcode time_unit single unit time fed lubridate::floor_date  \"week\", \"day\", \"month\",\"quarter\", \"year\" smooth Add smoothing line (geom_smooth) plot?","code":""},{"path":"/reference/dr_plot_vot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly create a bar chart which shows volume over time. — dr_plot_vot","text":"ggplot object","code":""},{"path":"/reference/dr_plot_vot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly create a bar chart which shows volume over time. — dr_plot_vot","text":"","code":"DisplayR::disp_example %>% dr_plot_vot(date = date, time_unit = \"day\") #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`).  DisplayR::disp_example %>% dr_plot_vot(date = date, colour = \"midnightblue\", time_unit = \"week\") #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/reference/dr_plot_vot_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly make a line plot of volume over time for a grouping variable — dr_plot_vot_group","title":"Quickly make a line plot of volume over time for a grouping variable — dr_plot_vot_group","text":"Quickly make line plot volume time grouping variable","code":""},{"path":"/reference/dr_plot_vot_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly make a line plot of volume over time for a grouping variable — dr_plot_vot_group","text":"","code":"dr_plot_vot_group(   data,   group_var,   date_var = date,   time_unit = c(\"day\", \"week\", \"month\", \"quarter\", \"year\") )"},{"path":"/reference/dr_plot_vot_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly make a line plot of volume over time for a grouping variable — dr_plot_vot_group","text":"data Data frame tibble group_var grouping variable e.g. country, cluster, topic etc. date_var Variable contains date information (can datetime think) time_unit single unit time fed lubridate::floor_date  \"week\", \"day\", \"month\",\"quarter\", \"year\"","code":""},{"path":"/reference/dr_plot_vot_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly make a line plot of volume over time for a grouping variable — dr_plot_vot_group","text":"ggplot object","code":""},{"path":"/reference/dr_theme_black.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_black — dr_theme_black","title":"theme_black — dr_theme_black","text":"Makes plot dark theme - suitable Microsoft projects.","code":""},{"path":"/reference/dr_theme_black.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_black — dr_theme_black","text":"","code":"dr_theme_black()"},{"path":"/reference/dr_theme_capture.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Capture Intelligence themed colour scales and aesthetics to ggplot2 plots — dr_theme_capture","title":"Apply Capture Intelligence themed colour scales and aesthetics to ggplot2 plots — dr_theme_capture","text":"function provides convenient way apply Capture themed colour scales aesthetics ggplot2 plots. user can specify whether want continuous discrete theme providing scale_type argument.","code":""},{"path":"/reference/dr_theme_capture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Capture Intelligence themed colour scales and aesthetics to ggplot2 plots — dr_theme_capture","text":"","code":"dr_theme_capture(   scale_type = c(\"discrete\", \"continuous\"),   direction = c(\"forwards\", \"backwards\"),   guide = \"colourbar\",   fallback_font = \"sans\" )"},{"path":"/reference/dr_theme_capture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Capture Intelligence themed colour scales and aesthetics to ggplot2 plots — dr_theme_capture","text":"scale_type character string specifying type scale, either \"continuous\" \"discrete\". Default \"discrete\". Simply, data mapped colour fill aesthetic discrete continuous. direction character string, either \"forwards\" \"backwards\" specifying direction colour fill gradient continuous scales. Default \"forwards\". Exercise caution opting \"backwards\" reverses colour sequence, causing smaller data values plot appear lighter. may visually intuitive audience, typically brighter colours, yellows, conventionally associated higher data values. guide optional character string specifying type guide use continuous scales. Default \"colourbar\", values include \"legend\", \"none\". rule thumb data continuous, \"colourbar\" used, data discrete \"legend\" used. fallback_font Adds fallback font 'sans' case user required font.","code":""},{"path":"/reference/dr_theme_capture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Capture Intelligence themed colour scales and aesthetics to ggplot2 plots — dr_theme_capture","text":"list containing ggplot2 theme, fill scale, colour scale.","code":""},{"path":"/reference/dr_theme_capture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Capture Intelligence themed colour scales and aesthetics to ggplot2 plots — dr_theme_capture","text":"","code":"library(ggplot2)  # Example with continuous theme ggplot(mtcars, aes(x = wt, y = mpg, colour = qsec)) +   geom_point() +   dr_theme_capture(scale_type = \"continuous\")   # Example with discrete theme ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() +   dr_theme_capture(scale_type = \"discrete\")"},{"path":"/reference/dr_theme_microsoft.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Microsoft Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_microsoft","title":"Apply Microsoft Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_microsoft","text":"function provides convenient way apply Microsoft themed colour scales aesthetics ggplot2 plots. user can specify whether want continuous discrete theme providing scale_type argument.","code":""},{"path":"/reference/dr_theme_microsoft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Microsoft Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_microsoft","text":"","code":"dr_theme_microsoft(   scale_type = c(\"discrete\", \"continuous\"),   index = NULL,   direction = c(\"forwards\", \"backwards\"),   guide = \"colourbar\",   fallback_font = \"sans\" )"},{"path":"/reference/dr_theme_microsoft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Microsoft Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_microsoft","text":"scale_type character string specifying type scale, either \"continuous\" \"discrete\". Default \"discrete\". Simply, data mapped colour fill aesthetic discrete continuous. index optional numeric index vector indices select specific colours Microsoft colour palette. direction character string, either \"forwards\" \"backwards\" specifying direction colour fill gradient continuous scales. Default \"forwards\". guide optional character string specifying type guide use continuous scales. Default \"colourbar\", values include \"legend\", \"none\". rule thumb data continuous, \"colourbar\" used, data discrete \"legend\" used. fallback_font Adds fallback font 'sans' case user required font (Segoe UI).","code":""},{"path":"/reference/dr_theme_microsoft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Microsoft Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_microsoft","text":"list containing ggplot2 theme, fill scale, colour scale.","code":""},{"path":"/reference/dr_theme_microsoft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Microsoft Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_microsoft","text":"","code":"# \\donttest{ library(ggplot2)  # Example with continuous theme ggplot(mtcars, aes(x = wt, y = mpg, colour = qsec)) +   geom_point() +   dr_theme_microsoft(scale_type = \"continuous\")   # Example with discrete theme ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() +   dr_theme_microsoft(scale_type = \"discrete\")    # }"},{"path":"/reference/dr_theme_samy.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply SAMY Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_samy","title":"Apply SAMY Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_samy","text":"function provides convenient way apply Microsoft themed colour scales aesthetics ggplot2 plots. user can specify whether want continuous discrete theme providing scale_type argument.","code":""},{"path":"/reference/dr_theme_samy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply SAMY Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_samy","text":"","code":"dr_theme_samy(   scale_type = c(\"discrete\", \"continuous\"),   index = NULL,   direction = c(\"forward\", \"backwards\"),   guide = \"colourbar\",   fallback_font = \"sans\" )"},{"path":"/reference/dr_theme_samy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply SAMY Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_samy","text":"scale_type character string specifying type scale, either \"continuous\" \"discrete\". Default \"discrete\". Simply, data mapped colour fill aesthetic discrete continuous. index optional numeric index vector indices select specific colours SAMY colour palette. direction character string, either \"forwards\" \"backwards\" specifying direction colour fill gradient continuous scales. Default \"forwards\". guide optional character string specifying type guide use continuous scales. Default \"colourbar\", values include \"legend\", \"none\". rule thumb data continuous, \"colourbar\" used, data discrete \"legend\" used. fallback_font Adds fallback font 'sans' case user required font (Montserrat Regular).","code":""},{"path":"/reference/dr_theme_samy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply SAMY Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_samy","text":"list containing ggplot2 theme, fill scale, colour scale.","code":""},{"path":"/reference/dr_theme_samy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply SAMY Themed Colour Scales and Aesthetics to ggplot2 Plots — dr_theme_samy","text":"","code":"library(ggplot2)  # Example with continuous theme ggplot(mtcars, aes(x = wt, y = mpg, colour = qsec)) +   geom_point() +   dr_theme_samy(scale_type = \"continuous\")   # Example with discrete theme ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() +   dr_theme_samy(scale_type = \"discrete\")"},{"path":"/reference/dr_theme_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply share Themed colour Scales and Aesthetics to ggplot2 Plots — dr_theme_share","title":"Apply share Themed colour Scales and Aesthetics to ggplot2 Plots — dr_theme_share","text":"function provides convenient way apply share themed colour scales aesthetics ggplot2 plots. user can specify whether want continuous discrete theme providing scale_type argument.","code":""},{"path":"/reference/dr_theme_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply share Themed colour Scales and Aesthetics to ggplot2 Plots — dr_theme_share","text":"","code":"dr_theme_share(   scale_type = c(\"discrete\", \"continuous\"),   index = NULL,   direction = c(\"forwards\", \"backwards\"),   guide = \"colourbar\",   fallback_font = \"sans\" )"},{"path":"/reference/dr_theme_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply share Themed colour Scales and Aesthetics to ggplot2 Plots — dr_theme_share","text":"scale_type character string specifying type scale, either \"continuous\" \"discrete\". Default \"discrete\". Simply, data mapped colour fill aesthetic discrete continuous. index optional numeric index vector indices select specific colours SHARE colour palette. direction character string, either \"forwards\" \"backwards\" specifying direction colour fill gradient continuous scales. Default \"forwards\". guide optional character string specifying type guide use continuous scales. Default \"colourbar\", values include \"legend\", \"none\". rule thumb data continuous, \"colourbar\" used, data discrete \"legend\" used. fallback_font Adds fallback font 'sans' case user required font (NeueHaasGroteskText Pro Md).","code":""},{"path":"/reference/dr_theme_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply share Themed colour Scales and Aesthetics to ggplot2 Plots — dr_theme_share","text":"list containing ggplot2 theme, fill scale, colour scale.","code":""},{"path":"/reference/dr_theme_share.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply share Themed colour Scales and Aesthetics to ggplot2 Plots — dr_theme_share","text":"","code":"library(ggplot2)  # Example with continuous theme ggplot(mtcars, aes(x = wt, y = mpg, colour = qsec)) +   geom_point() +   dr_theme_share(scale_type = \"continuous\")   # Example with discrete theme ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() +   dr_theme_share(scale_type = \"discrete\")"},{"path":"/reference/make_gt_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Summary Table for gt Summary Process — make_gt_summary_table","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"function creates summary table one step gt summary process. table summarizes data based group variable sentiment variable.","code":""},{"path":"/reference/make_gt_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"","code":"make_gt_summary_table(data, group_var, sentiment_var)"},{"path":"/reference/make_gt_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"data input data frame. group_var name variable used grouping data. sentiment_var name variable representing sentiment values.","code":""},{"path":"/reference/make_gt_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"data frame containing summary table.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/theme_capture_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_capture_continuous — theme_capture_continuous","title":"theme_capture_continuous — theme_capture_continuous","text":"Adds Capture colours font continuous plot.","code":""},{"path":"/reference/theme_capture_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_capture_continuous — theme_capture_continuous","text":"","code":"theme_capture_continuous(   direction = c(\"forwards\", \"backwards\"),   guide = c(\"colourbar\", \"colorbar\", \"legend\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_capture_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_capture_continuous — theme_capture_continuous","text":"direction direction colours scale. Set -1 reverse . guide type legend. Use \"colourbar\", \"legend\" FALSE. fallback_font Adds fallback font 'sans' case user required font.","code":""},{"path":"/reference/theme_capture_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_capture_discrete — theme_capture_discrete","title":"theme_capture_discrete — theme_capture_discrete","text":"Adds Capture colours font discrete plot.","code":""},{"path":"/reference/theme_capture_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_capture_discrete — theme_capture_discrete","text":"","code":"theme_capture_discrete(   direction = c(\"forwards\", \"backwards\"),   guide = c(\"legend\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_capture_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_capture_discrete — theme_capture_discrete","text":"direction direction colours scale. Set -1 reverse . guide optional character string specifying type guide use discrete scales. Either \"legend\", default, \"none\" remove legend. fallback_font Adds fallback font 'sans' case user required font.","code":""},{"path":"/reference/theme_microsoft_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_microsoft_continous — theme_microsoft_continuous","title":"theme_microsoft_continous — theme_microsoft_continuous","text":"Adds Microsoft colours font continous plot.","code":""},{"path":"/reference/theme_microsoft_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_microsoft_continous — theme_microsoft_continuous","text":"","code":"theme_microsoft_continuous(   index = NULL,   direction = c(\"forwards\", \"backwards\"),   guide = c(\"legend\", \"colourbar\", \"colorbar\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_microsoft_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_microsoft_continous — theme_microsoft_continuous","text":"index Choose palettes colours index setting index equal character vector e.g. c(1,2,3) c(1:3) direction direction colours scale. Set -1 reverse . guide type legend. Use \"colourbar\", \"legend\" FALSE. fallback_font Adds fallback font 'sans' case user required font (Segoe UI)","code":""},{"path":"/reference/theme_microsoft_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_microsoft_discrete — theme_microsoft_discrete","title":"theme_microsoft_discrete — theme_microsoft_discrete","text":"Adds Microsoft colours font discrete plot.","code":""},{"path":"/reference/theme_microsoft_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_microsoft_discrete — theme_microsoft_discrete","text":"","code":"theme_microsoft_discrete(   index = NULL,   guide = c(\"legend\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_microsoft_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_microsoft_discrete — theme_microsoft_discrete","text":"index Choose palettes colours index setting index equal character vector e.g. c(1,2,3) c(1:3) guide optional character string specifying type guide use discrete scales. Either \"legend\", default, \"none\" remove legend. fallback_font Adds fallback font 'sans' case user required font (Segoe UI)","code":""},{"path":"/reference/theme_samy_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_samy_continuous — theme_samy_continuous","title":"theme_samy_continuous — theme_samy_continuous","text":"Adds Samy colours font continuous plot.","code":""},{"path":"/reference/theme_samy_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_samy_continuous — theme_samy_continuous","text":"","code":"theme_samy_continuous(   index = NULL,   direction = c(\"forwards\", \"backwards\"),   guide = c(\"legend\", \"colourbar\", \"colorbar\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_samy_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_samy_continuous — theme_samy_continuous","text":"index Choose palettes colours index setting index equal character vector e.g. c(1,2,3) c(1:3) direction direction colours scale. Set -1 reverse . guide type legend. Use \"colourbar\", \"legend\" FALSE. fallback_font Adds fallback font 'sans' case user required font (Montserrat Regular).","code":""},{"path":"/reference/theme_samy_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_samy_discrete — theme_samy_discrete","title":"theme_samy_discrete — theme_samy_discrete","text":"Adds Samy colours font discrete plot.","code":""},{"path":"/reference/theme_samy_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_samy_discrete — theme_samy_discrete","text":"","code":"theme_samy_discrete(   index = NULL,   guide = c(\"legend\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_samy_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_samy_discrete — theme_samy_discrete","text":"index Choose palettes colours index setting index equal character vector e.g. c(1,2,3) c(1:3) guide optional character string specifying type guide use discrete scales. Either \"legend\", default, \"none\" remove legend. fallback_font Adds fallback font 'sans' case user required font (Montserrat Regular).","code":""},{"path":"/reference/theme_share_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_share_continuous — theme_share_continuous","title":"theme_share_continuous — theme_share_continuous","text":"Adds SHARE colours font continuous plot.","code":""},{"path":"/reference/theme_share_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_share_continuous — theme_share_continuous","text":"","code":"theme_share_continuous(   index = NULL,   direction = c(\"forwards\", \"backwards\"),   guide = c(\"legend\", \"colourbar\", \"colorbar\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_share_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_share_continuous — theme_share_continuous","text":"index Choose palettes colours index setting index equal character vector e.g. c(1,2,3) c(1:3) direction direction colours scale. Set -1 reverse . guide type legend. Use \"colourbar\", \"legend\" FALSE. fallback_font Adds fallback font 'sans' case user required font (NeueHaasGroteskText Pro Md).","code":""},{"path":"/reference/theme_share_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_share_discrete — theme_share_discrete","title":"theme_share_discrete — theme_share_discrete","text":"Adds SHARE colours font discrete plot.","code":""},{"path":"/reference/theme_share_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_share_discrete — theme_share_discrete","text":"","code":"theme_share_discrete(   index = NULL,   guide = c(\"legend\", \"none\"),   fallback_font = \"sans\" )"},{"path":"/reference/theme_share_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_share_discrete — theme_share_discrete","text":"index Choose palettes colours index setting index equal character vector e.g. c(1,2,3) c(1:3) guide optional character string specifying type guide use discrete scales. Either \"legend\", default, \"none\" remove legend. fallback_font Adds fallback font 'sans' case user required font (NeueHaasGroteskText Pro Md).","code":""},{"path":"/reference/vot_unit_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unit-specific data for plotting and switch o reduce complexity — vot_unit_data","title":"Get unit-specific data for plotting and switch o reduce complexity — vot_unit_data","text":"function returns list values used configuring ggplot2 plot depending time unit. includes date breaks, date labels, plot title, y-axis label. 'variable' 'unit' parameters allow flexibility describing data plotted.","code":""},{"path":"/reference/vot_unit_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unit-specific data for plotting and switch o reduce complexity — vot_unit_data","text":"","code":"vot_unit_data(   time_unit = c(\"day\", \"week\", \"month\", \"quarter\", \"year\"),   vot_variable = \"Volume of Mentions\",   unit = \"Count\" )"},{"path":"/reference/vot_unit_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unit-specific data for plotting and switch o reduce complexity — vot_unit_data","text":"time_unit single unit time fed lubridate::floor_date. vot_variable form part plot's title, describe type plot unit character string used describe unit data y-axis label. Default \"Count\".","code":""},{"path":"/reference/vot_unit_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unit-specific data for plotting and switch o reduce complexity — vot_unit_data","text":"list elements 'date_breaks', 'date_labels', 'title', 'yaxis'","code":""},{"path":[]},{"path":"/news/index.html","id":"displayr-010","dir":"Changelog","previous_headings":"","what":"DisplayR 0.1.0","title":"DisplayR 0.1.0","text":"Added montserrat source-sans-pro fonts package installation _brand.yml logo.png","code":""}]
